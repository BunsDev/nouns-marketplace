/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { IUpgradeManager, IUpgradeManagerInterface } from '../IUpgradeManager'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_prevImpl',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_newImpl',
        type: 'address',
      },
    ],
    name: 'isValidUpgrade',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

export class IUpgradeManager__factory {
  static readonly abi = _abi
  static createInterface(): IUpgradeManagerInterface {
    return new utils.Interface(_abi) as IUpgradeManagerInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IUpgradeManager {
    return new Contract(address, _abi, signerOrProvider) as IUpgradeManager
  }
}
