/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type { UpgradeManager, UpgradeManagerInterface } from '../UpgradeManager'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_registrar',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'registrar',
        type: 'address',
      },
    ],
    name: 'RegistrarUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'prevImpl',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newImpl',
        type: 'address',
      },
    ],
    name: 'UpgradeRegistered',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'prevImpl',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newImpl',
        type: 'address',
      },
    ],
    name: 'UpgradeUnregistered',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_prevImpl',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_newImpl',
        type: 'address',
      },
    ],
    name: 'isValidUpgrade',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_prevImpl',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_newImpl',
        type: 'address',
      },
    ],
    name: 'registerUpgrade',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'registrar',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_registrar',
        type: 'address',
      },
    ],
    name: 'setRegistrar',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_prevImpl',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_newImpl',
        type: 'address',
      },
    ],
    name: 'unregisterUpgrade',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b506040516105b53803806105b583398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610522806100936000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063666854a011610050578063666854a0146100cb578063852e98fc14610122578063faab9d391461013557600080fd5b80631adb799b1461006c5780632b20e39714610081575b600080fd5b61007f61007a366004610497565b610148565b005b6001546100a19073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101126100d9366004610497565b73ffffffffffffffffffffffffffffffffffffffff91821660009081526020818152604080832093909416825291909152205460ff1690565b60405190151581526020016100c2565b61007f610130366004610497565b610263565b61007f6101433660046104ca565b610374565b60015473ffffffffffffffffffffffffffffffffffffffff1633146101ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4f4e4c595f52454749535452415200000000000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8281166000818152602081815260408083209486168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905581519283528201929092527fb2fe829a797201ca16e849fb12a3fc16bebe37b07a82e65d81a001b3a693c37d91015b60405180910390a15050565b60015473ffffffffffffffffffffffffffffffffffffffff1633146102e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4f4e4c595f52454749535452415200000000000000000000000000000000000060448201526064016101c5565b73ffffffffffffffffffffffffffffffffffffffff8281166000818152602081815260408083209486168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905581519283528201929092527fab6a7dc54721d6a1a284ca865830f8981d6f12fbddb3618d1774b71c003680599101610257565b60015473ffffffffffffffffffffffffffffffffffffffff1633146103f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4f4e4c595f52454749535452415200000000000000000000000000000000000060448201526064016101c5565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fe696533f02cb3abcaaf5e85cd893de5abf147a82fd1496ddd3e5219da0a664379060200160405180910390a150565b803573ffffffffffffffffffffffffffffffffffffffff8116811461049257600080fd5b919050565b600080604083850312156104aa57600080fd5b6104b38361046e565b91506104c16020840161046e565b90509250929050565b6000602082840312156104dc57600080fd5b6104e58261046e565b939250505056fea264697066735822122006a3135a35f4407304d8397bce7d0b27504dd39b8e3b550ef4e931215c8b6d5964736f6c634300080f0033'

type UpgradeManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: UpgradeManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class UpgradeManager__factory extends ContractFactory {
  constructor(...args: UpgradeManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _registrar: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UpgradeManager> {
    return super.deploy(_registrar, overrides || {}) as Promise<UpgradeManager>
  }
  override getDeployTransaction(
    _registrar: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_registrar, overrides || {})
  }
  override attach(address: string): UpgradeManager {
    return super.attach(address) as UpgradeManager
  }
  override connect(signer: Signer): UpgradeManager__factory {
    return super.connect(signer) as UpgradeManager__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): UpgradeManagerInterface {
    return new utils.Interface(_abi) as UpgradeManagerInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): UpgradeManager {
    return new Contract(address, _abi, signerOrProvider) as UpgradeManager
  }
}
