/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { IMetadataRenderer, IMetadataRendererInterface } from '../IMetadataRenderer'

const _abi = [
  {
    inputs: [
      {
        internalType: 'string[]',
        name: 'names',
        type: 'string[]',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'propertyId',
            type: 'uint256',
          },
          {
            internalType: 'string',
            name: 'name',
            type: 'string',
          },
          {
            internalType: 'bool',
            name: 'isNewProperty',
            type: 'bool',
          },
        ],
        internalType: 'struct IMetadataRenderer.ItemParam[]',
        name: 'items',
        type: 'tuple[]',
      },
      {
        components: [
          {
            internalType: 'string',
            name: 'baseUri',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'extension',
            type: 'string',
          },
        ],
        internalType: 'struct IMetadataRenderer.IPFSGroup',
        name: 'data',
        type: 'tuple',
      },
    ],
    name: 'addProperties',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'contractURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'generate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getProperties',
    outputs: [
      {
        internalType: 'bytes',
        name: 'aryAttributes',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: 'queryString',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_foundersDAO',
        type: 'address',
      },
      {
        internalType: 'string',
        name: '_name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_description',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_contractImage',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_rendererBase',
        type: 'string',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'propertyId',
        type: 'uint256',
      },
    ],
    name: 'itemsCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'propertiesCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

export class IMetadataRenderer__factory {
  static readonly abi = _abi
  static createInterface(): IMetadataRendererInterface {
    return new utils.Interface(_abi) as IMetadataRendererInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMetadataRenderer {
    return new Contract(address, _abi, signerOrProvider) as IMetadataRenderer
  }
}
