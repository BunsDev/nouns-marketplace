/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { IDeployer, IDeployerInterface } from '../IDeployer'

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes',
            name: 'initInfo',
            type: 'bytes',
          },
          {
            internalType: 'address',
            name: 'foundersDAO',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'foundersMaxAllocation',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'foundersAllocationFrequency',
            type: 'uint256',
          },
        ],
        internalType: 'struct IDeployer.TokenParams',
        name: 'tokenParams',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'reservePrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'duration',
            type: 'uint256',
          },
        ],
        internalType: 'struct IDeployer.AuctionParams',
        name: 'auctionParams',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'timelockDelay',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'votingDelay',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'votingPeriod',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'proposalThresholdBPS',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'quorumVotesBPS',
            type: 'uint256',
          },
        ],
        internalType: 'struct IDeployer.GovParams',
        name: 'govParams',
        type: 'tuple',
      },
    ],
    name: 'deploy',
    outputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'auction',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'treasury',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'governor',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

export class IDeployer__factory {
  static readonly abi = _abi
  static createInterface(): IDeployerInterface {
    return new utils.Interface(_abi) as IDeployerInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IDeployer {
    return new Contract(address, _abi, signerOrProvider) as IDeployer
  }
}
